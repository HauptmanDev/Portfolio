{"ast":null,"code":"var _jsxFileName = \"Q:\\\\IT-kam\\\\react-portfolio\\\\src\\\\Contacts\\\\FormMailer.js\";\nimport React from 'react';\nimport styles from './Contacts.module.css';\n\nclass FormMailer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: ''\n    };\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({\n          status: \"SUCCESS\"\n        });\n      } else {\n        this.setState({\n          status: \"ERROR\"\n        });\n      }\n    };\n\n    xhr.send(data);\n  }\n\n  render() {\n    const status = this.state.status;\n    return React.createElement(\"div\", {\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: styles.formWrapper,\n      onSubmit: this.submitForm,\n      action: \"https://formspree.io/mnqnayrv\",\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: styles.inputForm,\n      type: \"name\",\n      name: \"name\",\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: styles.inputForm,\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: styles.message,\n      placeholder: \"Message\",\n      rows: \"5\",\n      name: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), status === \"SUCCESS\" ? React.createElement(\"div\", {\n      className: styles.posButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Thanks!\")) : React.createElement(\"div\", {\n      className: styles.posButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: styles.buttonSend,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Send message\")), status === \"ERROR\" && React.createElement(\"div\", {\n      className: styles.posButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Ooops! There was an error.\"))));\n  }\n\n}\n\nexport default FormMailer;","map":{"version":3,"sources":["Q:/IT-kam/react-portfolio/src/Contacts/FormMailer.js"],"names":["React","styles","FormMailer","Component","constructor","props","state","status","submitForm","bind","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","render","container","formWrapper","inputForm","message","posButton","buttonSend"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './Contacts.module.css';\n\nclass FormMailer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.submitForm = this.submitForm.bind(this)\n    }\n\n    state = {status: ''};\n\n    submitForm(ev) {\n        ev.preventDefault();\n        const form = ev.target;\n        const data = new FormData(form);\n        const xhr = new XMLHttpRequest();\n        xhr.open(form.method, form.action);\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState !== XMLHttpRequest.DONE) return;\n            if (xhr.status === 200) {\n                form.reset();\n                this.setState({status: \"SUCCESS\"});\n            } else {\n                this.setState({status: \"ERROR\"});\n            }\n        };\n        xhr.send(data);\n    }\n\n    render() {\n        const {status} = this.state;\n        return (\n                    <div className={styles.container}>\n                        <form className={styles.formWrapper}\n                              onSubmit={this.submitForm}\n                              action=\"https://formspree.io/mnqnayrv\"\n                              method=\"POST\">\n                            <input className={styles.inputForm} type=\"name\" name=\"name\" placeholder=\"Name\"/>\n                            <input className={styles.inputForm} type=\"email\" name=\"email\" placeholder=\"Email\"/>\n                            <textarea className={styles.message} placeholder=\"Message\" rows='5' name='message'/>\n                            {status === \"SUCCESS\" ? <div className={styles.posButton}><span>Thanks!</span></div> :\n                                <div className={styles.posButton}>\n                                    <button className={styles.buttonSend} type=\"submit\">Send message</button>\n                                </div>}\n                            {status === \"ERROR\" &&\n                            <div className={styles.posButton}><span>Ooops! There was an error.</span></div>}\n                        </form>\n            </div>\n        );\n    }\n}\n\nexport default FormMailer;\n"]},"metadata":{},"sourceType":"module"}